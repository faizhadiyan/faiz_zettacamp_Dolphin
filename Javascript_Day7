//Create a Variable to Save Song Lists
// duration in second
const songList = [
  { title: 'Shape of You', artist: 'Ed Sheeran', genre: 'Pop', duration: 234 },
  { title: 'Bohemian Rhapsody', artist: 'Queen', genre: 'Rock', duration: 354 },
  { title: 'Uptown Funk', artist: 'Mark Ronson ft. Bruno Mars', genre: 'Funk', duration: 270 },
  { title: 'Rolling in the Deep', artist: 'Adele', genre: 'Pop', duration: 228 },
  { title: 'Billie Jean', artist: 'Michael Jackson', genre: 'Pop', duration: 294 },
  { title: 'Stairway to Heaven', artist: 'Led Zeppelin', genre: 'Rock', duration: 482 },
  { title: 'Shape of My Heart', artist: 'Sting', genre: 'Pop', duration: 255 },
  { title: 'Hotel California', artist: 'Eagles', genre: 'Rock', duration: 378 },
  { title: "Don't Stop Believin'", artist: 'Journey', genre: 'Rock', duration: 278 },
  { title: 'Havana', artist: 'Camila Cabello', genre: 'Pop', duration: 210 },
  { title: 'Thinking Out Loud', artist: 'Ed Sheeran', genre: 'Pop', duration: 290 },
  { title: "Sweet Child o' Mine", artist: "Guns N' Roses", genre: 'Rock', duration: 355 },
  { title: 'Bad Guy', artist: 'Billie Eilish', genre: 'Pop', duration: 194 },
  { title: "Livin' on a Prayer", artist: 'Bon Jovi', genre: 'Rock', duration: 248 },
  { title: 'Say Something', artist: 'Justin Timberlake', genre: 'Pop', duration: 289 },
  { title: 'Yesterday', artist: 'The Beatles', genre: 'Rock', duration: 128 },
  { title: 'All of Me', artist: 'John Legend', genre: 'Pop', duration: 260 },
  { title: 'I Will Always Love You', artist: 'Whitney Houston', genre: 'Pop', duration: 273 },
  { title: 'Somebody to Love', artist: 'Queen', genre: 'Rock', duration: 300 },
  { title: 'Shake It Off', artist: 'Taylor Swift', genre: 'Pop', duration: 212 },
  { title: 'Wonderwall', artist: 'Oasis', genre: 'Rock', duration: 258 },
  { title: 'Sorry', artist: 'Justin Bieber', genre: 'Pop', duration: 200 },
  { title: 'Piano Man', artist: 'Billy Joel', genre: 'Pop', duration: 305 },
  { title: 'Every Breath You Take', artist: 'The Police', genre: 'Rock', duration: 243 },
  { title: "Can't Stop the Feeling!", artist: 'Justin Timberlake', genre: 'Pop', duration: 236 },
  { title: 'With or Without You', artist: 'U2', genre: 'Rock', duration: 294 },
  { title: "Can't Help Falling in Love", artist: 'Elvis Presley', genre: 'Pop', duration: 181 },
  { title: 'Wonderful Tonight', artist: 'Eric Clapton', genre: 'Rock', duration: 209 },
  { title: "Don't You Want Me", artist: 'The Human League', genre: 'Pop', duration: 213 },
  { title: 'Superstition', artist: 'Stevie Wonder', genre: 'Funk', duration: 268 },
  { title: 'Smooth', artist: 'Santana ft. Rob Thomas', genre: 'Rock', duration: 272 },
  { title: 'All Star', artist: 'Smash Mouth', genre: 'Rock', duration: 200 },
  { title: "What's Love Got to Do with It", artist: 'Tina Turner', genre: 'Pop', duration: 217 },
  { title: 'Every Little Thing She Does Is Magic', artist: 'The Police', genre: 'Rock', duration: 257 },
  { title: 'I Want to Hold Your Hand', artist: 'The Beatles', genre: 'Rock', duration: 152 },
  { title: 'Girls Just Want to Have Fun', artist: 'Cyndi Lauper', genre: 'Pop', duration: 222 },
  { title: 'Eye of the Tiger', artist: 'Survivor', genre: 'Rock', duration: 248 },
  { title: 'I Will Survive', artist: 'Gloria Gaynor', genre: 'Disco', duration: 196 },
  { title: 'I Want It That Way', artist: 'Backstreet Boys', genre: 'Pop', duration: 213 },
  { title: 'Unchained Melody', artist: 'The Righteous Brothers', genre: 'Pop', duration: 195 },
  { title: 'Killing Me Softly with His Song', artist: 'Roberta Flack', genre: 'Pop', duration: 253 },
  { title: 'More Than a Feeling', artist: 'Boston', genre: 'Rock', duration: 263 },
  { title: "Don't Stop 'Til You Get Enough", artist: 'Michael Jackson', genre: 'Pop', duration: 242 },
  { title: "Livin' La Vida Loca", artist: 'Ricky Martin', genre: 'Pop', duration: 252 },
  { title: 'Beat It', artist: 'Michael Jackson', genre: 'Pop', duration: 150 },
  { title: 'September', artist: 'Earth, Wind & Fire', genre: 'Disco', duration: 215 },
  { title: "I'm Yours", artist: 'Jason Mraz', genre: 'Pop', duration: 242 },
  { title: 'Let It Be', artist: 'The Beatles', genre: 'Rock', duration: 240 },
  { title: 'Purple Haze', artist: 'Jimi Hendrix', genre: 'Rock', duration: 171 },
  { title: 'Dancing Queen', artist: 'ABBA', genre: 'Pop', duration: 229 },
  { title: 'Sweet Caroline', artist: 'Neil Diamond', genre: 'Pop', duration: 203 },
  { title: "Livin' on a Prayer", artist: 'Bon Jovi', genre: 'Rock', duration: 248 },
  { title: 'Take on Me', artist: 'a-ha', genre: 'Pop', duration: 227 },
  { title: "Stayin' Alive", artist: 'Bee Gees', genre: 'Disco', duration: 245 },
  { title: 'La Bamba', artist: 'Ritchie Valens', genre: 'Rock', duration: 163 },
  { title: 'Sweet Home Alabama', artist: 'Lynyrd Skynyrd', genre: 'Rock', duration: 283 },
  { title: "Summer of '69", artist: 'Bryan Adams', genre: 'Rock', duration: 233 },
];

// Create a Function to Group Songs by Artists
function groupByArtist(songs) {
  const groupedSongs = {};

  songs.forEach((song) => {
    const artist = song.artist;

    if (!groupedSongs[artist]) {
      groupedSongs[artist] = [];
    }

    groupedSongs[artist].push(song);
  });

  return groupedSongs;
}

const songsByArtist = groupByArtist(songList);
console.log('Songs grouped by artist:', songsByArtist);

// Create a Function to Group Songs by Genre
function groupByGenre(songs) {
  const groupedSongs = {};

  songs.forEach((song) => {
    const genre = song.genre;

    if (!groupedSongs[genre]) {
      groupedSongs[genre] = [];
    }

    groupedSongs[genre].push(song);
  });

  return groupedSongs;
}

const songsByGenre = groupByGenre(songList);
console.log('Songs grouped by genre:', songsByGenre);

// Create a Function to Group Songs by Duration
function groupByDurationRandom(songs, maxDuration) {
  const songsToGroup = songs.filter((song) => song.duration <= maxDuration);
  const groupedSongs = [];

  while (songsToGroup.length > 0) {
    const group = [];
    let currentDuration = 0;

    while (currentDuration < maxDuration && songsToGroup.length > 0) {
      const randomIndex = Math.floor(Math.random() * songsToGroup.length);
      const randomSong = songsToGroup.splice(randomIndex, 1)[0];
      group.push(randomSong);
      currentDuration += randomSong.duration;
    }

    groupedSongs.push(group);
  }

  return groupedSongs;
}

const songsLessThan1HourRandom = groupByDurationRandom(songList, 3600);
console.log('Randomly grouped songs less than 1 hour:', songsLessThan1HourRandom);

// console.log(songList.length); 57 songs
